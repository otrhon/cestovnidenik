// Code generated by go-bindata.
// sources:
// content/css/flickr.css
// content/js/flickr.js
// content/js/tinyMce-cs_CZ.js
// content/js/tinyMceInit.js
// DO NOT EDIT!

package content

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _contentCssFlickrCss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\xc1\x4a\x03\x31\x10\x86\xcf\x0d\xe4\x1d\x06\x8a\x37\xb7\xb6\xc2\x8a\xa6\x27\xdf\xc0\x57\x98\xdd\x99\x4d\x87\x26\x33\x4b\x12\x71\x8b\xf4\xdd\xc5\xed\xc5\x83\xe2\xf5\x83\xf9\xbe\xf9\x07\xa3\x0b\x7c\x7a\xb7\x99\x4c\x5b\x80\xe7\xfe\xee\xe1\x00\xaf\x45\x30\xdd\x43\x45\xad\x5d\xe5\x22\xd3\xd1\xbb\xab\x77\xde\x6d\xa7\x24\xe3\xb9\xbc\x9d\xac\x59\x5d\xcf\x06\x2b\xc4\x25\xc0\x61\x5e\xa0\x5a\x12\x82\x2d\x11\x1d\xbd\xdb\x64\x2c\x51\x34\xc0\x23\x67\xc0\xf7\x66\x37\xb6\x74\x1f\x42\xed\x14\xe0\xe5\x69\x3f\x2f\xdf\xac\xf1\xd2\x3a\x4c\x12\x35\xc0\xc8\xda\xb8\xfc\x5e\xdb\x49\xc6\xc8\x15\x70\xed\x92\xd4\x39\xe1\x25\x80\x68\x12\xe5\x6e\x48\x36\x9e\x7f\x66\xf7\xbb\x9e\xf3\x7f\x26\xc9\x71\xb5\xcd\x48\x24\x1a\x03\xf4\xb7\x9f\xfe\x5c\x75\xfd\x0a\x00\x00\xff\xff\xab\x31\xc5\x2b\x30\x01\x00\x00")

func contentCssFlickrCssBytes() ([]byte, error) {
	return bindataRead(
		_contentCssFlickrCss,
		"content/css/flickr.css",
	)
}

func contentCssFlickrCss() (*asset, error) {
	bytes, err := contentCssFlickrCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "content/css/flickr.css", size: 304, mode: os.FileMode(438), modTime: time.Unix(1475007550, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _contentJsFlickrJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x56\xdd\x6e\xe3\x36\x13\xbd\x0f\x90\x77\x98\x4f\x1f\x6a\xc9\xf0\x46\x96\xdd\x36\x71\x6a\xcb\x6d\xb0\xdd\x45\x5b\x64\xb7\x05\x5a\xf4\x26\x08\x0c\x5a\x1c\x49\x6c\x28\x52\x25\x69\xef\x1a\x85\x9f\xa4\xcf\xd2\xab\xf6\xc1\x0a\x8a\x92\x2c\x25\x76\x37\x0b\xb4\xba\xd0\x0f\x79\x66\x38\x33\xe7\x0c\xc5\x2d\x51\xf0\x9a\xb3\xe4\x41\x41\x0c\x41\xba\x11\x89\x61\x52\x40\x30\x84\xdf\xce\xcf\x00\x00\xda\x21\x87\x3a\x4c\xd8\xcb\xe4\x4c\x87\x1b\x8d\xd6\xd8\x9b\x7c\x3a\xb9\x9e\x4c\x27\xd7\xd1\x57\x6f\xa3\x2b\x6f\xee\x50\x7b\xf7\x70\xc6\x61\xa9\xa4\x91\x66\x57\x62\x98\xa1\xb9\xe1\xeb\x4d\xa1\xbf\xd3\x52\x40\x0c\x47\x56\xb6\x97\x0d\x4f\xab\xc4\xba\xcf\x8d\x29\xf5\x17\xe3\x31\x29\x59\x98\x3a\x77\x89\x2c\xc6\x1a\xd5\x96\x25\xa8\xc7\x0a\xb5\x19\x7f\x59\xa0\xc9\x25\x8d\x6b\x40\x99\x4b\x23\x35\x1a\x6d\xd7\xbb\x65\xda\x0c\x48\xc9\x56\x0f\xb8\x8b\x3f\x27\xd7\x97\x29\x4e\x27\xeb\xe9\xfa\x32\x4d\x70\x46\x67\xe9\x6c\x7a\x35\x23\x53\x5c\x47\xd3\xd9\x65\x3a\xb0\x59\xad\x18\x8d\x3d\x18\x75\xd2\x1c\x81\x37\x48\xa5\x2a\x88\x89\x7f\xd1\x52\x0c\xec\x2d\x21\x9c\xaf\x49\xf2\x10\xb7\x39\x35\xc9\xb7\x19\x24\x8a\x95\x06\x62\xa0\x32\xd9\x14\x28\x4c\x98\x28\x24\x06\x5f\x71\xb4\x5f\x81\xe7\x00\xde\xb0\x63\xe7\x86\x42\x97\xbc\x56\x49\x67\xaa\xf5\xb2\x96\x74\x17\x92\xb2\x44\x41\x5f\xe6\x8c\xd3\xc0\x19\x35\x6e\xf6\xf5\x53\xa1\xd9\xa8\x86\xc0\xf9\xf9\xd9\x3e\x18\x5a\x88\x8d\x2c\x6b\x43\x13\x1b\xce\xe7\xe7\x67\x2d\x0f\x19\x1a\x4b\x4d\x40\x6c\x46\x2d\x27\x2c\x85\xa0\xb1\xf9\x9f\x33\xea\xf1\xd5\x0f\x4d\x61\x21\xb7\xe8\x42\xcb\xfa\xb1\xf5\xc0\xbf\x6e\x50\xed\x7e\x44\x8e\x89\x91\x2a\xf0\xfe\xef\xd8\xfb\xa1\x22\xcf\x1b\x86\x4c\x08\x54\xdf\xfc\xf4\xe6\xd6\xca\xa0\x5b\xdb\x27\xd1\x77\x14\x67\x23\xad\x62\x87\x38\x06\x2f\xf2\x7a\x61\xba\x8a\xf4\x0d\xfe\x4d\xa9\xb9\xd0\x9f\x2f\xb6\xc6\xb8\x11\x9c\x0b\xdc\x8a\xad\x91\x61\xdb\x5c\x9f\x7c\x16\xbd\x8d\xae\x06\xf8\xde\x28\xa2\xe3\x8d\xe2\x2b\xfd\xc2\xde\xf9\x3f\xea\xb2\xae\x65\x9d\x71\xf6\xb1\x82\xcc\x4e\xa8\xf1\xb4\x12\x3b\x74\xef\xfb\xaa\x72\x2d\x12\x50\x62\x48\x4f\x56\x76\x00\x06\x03\xb0\xcf\x43\x35\x9f\xec\x06\xcc\x60\xa1\x6d\xe4\x3d\x58\xfb\xf6\xa8\xf3\x72\x53\x70\xcb\xe8\x42\x57\xea\x02\x29\x92\x9c\x88\x0c\x63\xbf\xd1\x77\xd5\xdb\xb2\xb4\xd1\xe9\xbb\xea\xc3\x41\x91\x7e\x2b\x28\xbe\xbf\x0f\xb7\x84\x6f\x70\xe8\x2f\xbb\xc2\xab\xdc\x8e\xac\x5f\x67\x09\x15\x28\xf6\x23\x7f\x79\x71\x01\x3f\xff\xf9\xc7\xfa\xaf\xdf\x95\x65\x91\xc0\xc5\xc5\x62\xec\x40\xcb\xc7\xdb\x82\x29\xca\x1b\xb5\xb3\xea\xc5\x77\x70\xa3\x14\xd9\x05\xdd\xf6\x48\xa5\x82\xa0\x4a\x19\x62\x88\xe6\xc0\x60\xe1\xb2\x0f\x39\x8a\xcc\xe4\x73\x18\x8d\x58\xaf\x3e\xdd\x1a\x41\xec\xc0\x77\xec\x7e\xde\x47\xb8\x65\xef\xd8\xfd\xc9\x95\x7b\xa8\xbb\xe8\xbe\xf6\x15\x1a\x66\x38\x86\xab\x44\x0a\x83\xc2\x9c\x34\x98\xb4\x06\x8c\x76\x40\xfb\xce\x7f\xa3\xc2\x86\x5a\x2a\xf3\xc1\x94\x6b\x6c\x93\x33\x1b\x8d\x9e\xe4\x7c\x8a\x8e\x6a\xef\xee\x86\x35\x02\xcf\x5f\xf6\x47\xa3\x6a\xf4\x28\x47\xfb\x63\x84\x8f\x9d\x3c\x7a\xc0\x0f\x6c\x64\xf5\x4f\xa1\xbf\x91\x59\x8f\x87\x0d\xe8\x51\x8f\xb8\x76\x7d\x66\x8f\x3c\xaf\x45\xdc\xcb\xa9\xf6\xa0\x6c\x0b\x09\x27\x5a\xc7\x3e\x2b\x48\x86\xba\xaf\xf7\xff\x4a\x8a\x87\xb2\x12\x30\x44\x65\x68\x62\x7f\xb5\xe6\x44\x3c\xf8\x90\x2b\x4c\x1d\x85\x95\x94\xaa\x3d\xce\x11\xb8\x60\x45\x06\xef\x18\x35\x79\x67\xbe\xfa\x5e\xe9\x0a\x01\x39\xb2\x2c\x37\x9d\x59\x37\xd0\x4c\x6b\x95\x3c\xf2\x5c\x4f\x10\x6e\x62\xdf\x87\xf1\x72\x31\x26\xcf\x90\x02\x65\xdb\x8f\xd1\xc1\xd1\x1f\xda\x13\x1d\xb4\x4e\x08\xa5\xaf\xb6\x28\xaa\x73\x0b\x0a\x54\x81\xf7\xf5\xf7\x6f\x5e\xba\xde\xbb\x95\x84\x22\xf5\x5e\x1c\x3b\x37\xd9\xb2\xbb\x05\x5f\x23\xd2\xba\xc9\x9b\xd3\x5b\xbd\xd4\x61\xbe\x7f\x12\xab\x00\x7b\x7b\xfb\x3b\x00\x00\xff\xff\x20\x1a\xd2\x50\x19\x0a\x00\x00")

func contentJsFlickrJsBytes() ([]byte, error) {
	return bindataRead(
		_contentJsFlickrJs,
		"content/js/flickr.js",
	)
}

func contentJsFlickrJs() (*asset, error) {
	bytes, err := contentJsFlickrJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "content/js/flickr.js", size: 2585, mode: os.FileMode(438), modTime: time.Unix(1475009148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _contentJsTinymceCs_czJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x58\x3b\x73\xe4\xc8\x91\xfe\x2b\x19\xe5\xdc\x6e\x1c\xd4\xa3\xd5\x2b\xee\x70\xc6\x04\xd9\x14\x67\x76\x67\x96\x64\x34\x39\xdc\x13\x9d\x8b\x6a\x54\x92\x5d\x44\xa1\x12\x5b\x0f\x70\xd0\x0a\xf9\x67\x88\xfe\xcd\xd1\x51\x9b\x63\x30\x64\xc8\xe6\x38\xe8\xfe\x5f\x8a\x2c\xa0\x5f\xa4\x26\x24\x8b\xcd\x42\xa1\x2a\x1f\x5f\x7e\xf9\x25\x82\xb6\x6d\x55\xe0\x48\x2a\xf5\xfd\x77\xff\x61\xbf\x11\x85\xff\x9f\xf1\x95\xc8\xfe\x38\x8e\x21\x17\x97\xed\x6d\x45\x31\x88\x4c\xbc\x45\xa9\xb4\xbd\x81\xdf\x8a\x5c\x9c\x48\x55\x6b\x0f\xbf\x1d\x96\xd1\xc1\xaf\xb6\xab\xbf\x12\x99\xf8\x03\x45\x07\x53\x47\x77\x1e\x1d\x28\x42\x6f\xff\x2d\x80\x8f\x75\x4d\x2e\x80\xd2\x0e\x8b\x00\xb2\x28\xd0\x7b\x08\x04\x61\x86\x50\x18\x5d\x4f\x49\x3a\x35\x82\x33\x83\xd2\x23\x44\x8f\xe9\xc9\x38\x38\xf3\xef\xff\xfd\x6a\xfc\xea\x12\x4a\x6c\xd3\x1e\xf0\x33\x72\xa1\x88\xc1\x83\xb6\x3e\xa0\x54\x23\x91\x8b\xcb\x6e\xb1\x5a\x40\xed\x68\x66\xba\xc7\xd5\x17\x5c\xde\x83\xc5\x9a\x54\x4d\x2e\xde\x22\xd4\xab\x4f\xdd\x63\xd5\x3d\xf5\x3f\x7c\x88\x35\x28\x02\x5f\xcc\x5c\xb7\xb0\x65\x3b\x82\x33\x8a\xab\x2f\xfa\x36\x20\x9f\xe1\xbb\xc7\x0a\x4a\xd3\x2d\x1a\xf4\xd4\x74\x9f\x61\x5e\x3a\x19\xca\x76\xc7\x9c\xd1\x4e\x54\x7e\xb3\xf5\xff\x37\x22\x3b\xd2\x4d\x2e\x8e\x74\x03\xdf\x4c\x0d\x95\xdf\xee\xec\xdb\x8f\xd3\x99\xf4\x01\x73\x71\x69\x68\xf5\x45\x07\x91\x8d\x0d\x79\xcc\xc5\x95\x6c\xd8\x44\x8e\xfa\x31\xd9\x00\xc7\xb2\xd2\xa6\x15\xb9\x98\x90\xd2\x56\x42\xdd\x3d\xfa\x4a\x8a\xec\xcc\x61\x2e\xce\x1c\xc2\x37\xf5\xea\x13\xaa\x6b\x72\x55\xb7\x08\xd4\x74\x0b\x4b\x7c\xe9\x81\xd1\x37\x16\x9c\xbe\x99\x05\x0e\x4f\xed\x64\x43\x22\x13\x27\x78\x07\x8a\x8a\x58\xa1\xe5\xf5\x13\x6a\xba\x27\x50\x54\xf6\x0b\xd9\xa1\xa1\xa2\xfc\x39\x12\x5b\x36\xd6\x41\x16\xc8\xef\xc4\x6a\x8a\x0e\x15\x18\xed\xf9\xa5\xe5\x9f\xbb\x47\x6f\xd2\x55\xdd\xe3\x8e\x7f\xdf\x6d\xfd\xfb\x4e\x64\xc3\xaa\x5f\xaf\xb5\x22\x13\xdf\xdb\xc2\xa5\xfc\x6a\xab\x7a\x03\xae\x9a\xe5\xc3\x6a\xa1\x03\x90\xf2\x72\x8e\xe9\xc0\x63\x72\x95\x0c\x3e\x17\xc7\xbd\x53\x6d\x7f\x18\xba\xbd\xb3\xce\xd1\x24\x24\x19\xc3\xfe\xb5\x53\x27\x03\x34\xab\x05\x6e\x71\xf9\xeb\xad\x3d\xbf\x1e\x5c\xf3\xb9\x38\x34\x54\xf6\x49\xa5\xa9\xeb\xaf\x4c\xa9\x2a\x38\x57\x1f\xac\xa2\x5c\x5c\xd5\xcb\x87\x20\xb2\xf3\xe0\x74\x89\x61\xe6\x28\xde\xcc\x72\x71\xb6\xfa\x84\xab\x45\xe9\x82\x8d\xa1\xfb\x2c\x32\x71\x18\x8d\xc1\xb0\x8e\xca\xa9\x72\xdd\x62\xf5\xa5\x6c\xb7\x06\xec\x07\xe4\x3c\xd6\xe8\x7c\xe1\x74\x1d\x72\xf1\x96\x1c\x5f\xcc\x71\xf8\x28\x32\x31\x36\x28\x1d\x5c\x27\xc7\x83\xb6\x37\xc9\xa5\x4a\xce\x65\x80\xdd\xcc\xa6\x70\x27\x58\x9c\xeb\x39\x7a\xde\x85\x46\x97\xe4\xc3\x06\x17\xe7\x71\xba\xbe\xe3\x88\xcc\xee\x1d\x83\x51\xbf\xdb\x1a\xf5\x3b\x91\x4d\x30\x39\x6c\xa9\x89\x0c\x49\x27\x6f\x9c\xac\x67\xec\x8d\x0f\xb2\xc1\x42\x64\xa7\x65\x2e\x4e\x4b\x91\x1d\x92\x51\xb9\xb8\x88\xcb\x7b\xbb\x7c\x10\xd9\x98\x14\x63\x84\x14\xc2\x37\x65\xf7\x37\xf5\xad\xc8\xbe\x0f\xd2\xe8\x22\x17\xef\xa2\x9b\x77\x8f\x8d\xdc\xa0\xb0\x40\x1b\xd0\xa5\x7b\xc1\x07\x86\xeb\xd6\x9c\x7f\x40\x29\x8c\xa5\x7d\x2b\x37\xcb\xfb\x29\x15\x47\xf8\x02\x4f\x15\xda\xe7\x78\x5a\x5f\xb5\x5f\xa7\x22\x15\x20\x68\x0f\x96\xee\x40\x5b\xa8\x8d\xd4\x16\x02\x7e\x0c\x50\x91\xc2\x11\x8c\xc9\x06\xb4\xc1\xc3\x9d\x36\x26\xed\x9a\x22\xd4\xfc\x96\x02\xe9\x77\xf7\x47\x1b\xb4\x81\x96\x22\x04\xba\xb9\x31\xcc\x5d\xda\x03\xd5\x41\x93\x05\xba\xbe\x66\x86\xfa\x01\x61\x2e\x6b\x1b\x03\x41\xc3\xdc\xa2\x52\x3e\x61\x79\xaf\x7d\xe8\x3e\xcf\x28\x9d\x14\x47\x70\x44\x65\x54\x60\x71\x1a\x15\x42\x90\xbc\x9d\xcc\x54\x42\xd3\xf2\xcb\x32\x83\xf4\xa0\x61\x28\xa2\xeb\x9e\x80\xa6\x5e\xce\xa0\x61\x1a\x41\x0b\xb7\xb2\xa4\xe1\xcc\xa7\x74\xe2\x28\x81\x1a\x9d\xd1\x96\x09\x83\x54\x70\xbc\x91\x01\x3c\x96\xb6\x40\x93\x8b\x2b\x17\x39\x64\x22\xfb\x21\xfa\xa0\xaf\x5b\x26\x21\x47\x8d\x95\x81\x49\x92\x59\x2c\x8a\xec\x7b\xdb\x9f\xb0\xfa\xbf\x6e\xa1\x5e\x16\x90\x4e\x8f\xbf\x65\x5c\xd4\x6d\x2e\xde\x51\xdd\x3d\x3a\x6a\x64\xd8\x80\xc0\xe0\x75\x62\x22\x83\x89\x88\x2e\xb5\x8f\xd2\x80\xd4\x2a\xc1\x58\xcf\x63\xb7\x48\x70\xad\xa9\x5a\xfd\xb5\x48\x65\xf4\x9e\xee\xd0\xc1\x1b\x87\x58\x0a\xbe\x19\x8b\xb2\x5b\xf4\x48\x47\xcb\x58\xff\x39\x4a\xa6\xc1\xe5\x9f\x43\x83\x0e\x97\xf7\x58\x8a\xec\x08\xaf\x65\x34\xdc\xbe\xba\xa7\x62\x46\xf3\x84\x80\xfe\xa4\x03\x53\xcf\xa4\xc8\xc5\x8f\xd2\xec\x9d\x33\xd6\xae\x30\xc8\x56\x1b\x5c\xde\x97\xc4\x24\xee\x8b\x5c\x9c\x45\x1b\xba\xc7\x52\x64\xe2\x43\x5d\xef\xbc\x7f\x89\x66\xdf\x90\xe1\xf9\x84\x2a\x69\x93\xa5\xdd\x63\xe5\xcb\xee\x33\x2c\xef\x99\x2a\x75\xa2\xd1\xde\x86\xf5\x1e\xb6\xe1\x33\xa4\xb6\xe4\xcd\xfe\xce\x13\x59\x61\x2e\x4e\xba\xc5\x1c\x1b\x91\x1d\xd8\x62\x46\x8e\x8d\x0b\xa9\xa4\xfe\x40\x11\x66\xb2\x41\x88\xd6\xcb\x06\x15\x14\x33\x69\x6f\xd0\x83\x74\x98\x20\xe8\xe3\xf0\xe3\x4e\xda\xc0\x2d\xd6\xca\x46\xdf\xc8\x80\x20\xef\x64\xfb\x9a\xef\xee\x16\x01\xc1\x62\xec\x41\xc3\xa9\xac\x96\x0f\xb6\x1d\xc1\x29\xf7\x09\x15\xa1\x98\x15\x18\x10\xa8\x66\x44\x04\xf0\x21\xf5\xc9\xf8\x5a\x64\x62\x82\x3e\x90\x43\x30\xd2\x07\x50\x4e\xa6\xac\x9e\x4e\x2d\x35\x3a\x40\x4d\xde\xa0\xe2\x34\x96\x64\x0b\xac\x19\x7e\xe2\xbc\xc6\x42\x4b\xc3\x86\x3a\x59\xf4\x4c\x90\xd6\x86\x8c\xcf\xad\xe4\x18\x9f\x53\x74\x05\x42\x41\x0a\xb9\x90\x95\xa3\xdb\xd4\x9d\x98\x5d\x44\x76\x98\x8b\x43\x91\x4d\x72\x31\x11\xd9\x9b\x5c\xbc\x61\xa4\x19\x8e\xcb\xa1\x74\x29\x2e\x13\x6e\x75\xec\xee\x00\xb4\x2b\x76\x45\x82\x22\x83\xe9\xf9\x7b\xbc\x4e\x8f\xd7\x2d\xf1\x8a\xd7\x41\x51\xda\x26\xb2\xdf\x57\x14\x74\x41\xd6\xe7\x22\xfd\x2c\xc9\xb6\x22\x9b\xd0\x94\xb8\x13\xa5\xbf\x9a\x19\x67\xe8\x9d\x2c\x13\x6a\x74\x41\xf7\x2c\xcc\xc1\xb0\xe4\x83\xde\xf4\xd2\x28\xb2\x0b\x1d\x18\x55\x17\x3a\x44\xc3\xc8\x7c\x87\xed\x1d\x39\xe5\x73\xf1\xce\x74\x8f\xcb\x7b\xa6\x74\xe0\x46\xca\xd7\xdb\x82\xfb\xfb\x4d\x2e\xde\x75\x7f\x53\x1b\xb2\x3f\xc2\x9e\xcc\x35\x59\x2e\xde\x5a\x7b\x91\x1d\xc4\x90\x00\x71\x10\x03\x39\x91\x1d\x47\x63\x7c\xe1\x10\x6d\x2e\xc6\x3d\x30\x53\x5d\x52\x53\xb2\xdb\x6f\xc9\xe9\x39\xd9\x20\x0d\x70\x85\xb2\xb1\xa4\x88\xcb\xbb\x5b\xf0\xca\xf3\x4d\xbe\xe6\xa6\x9f\x6f\x96\x86\x1c\x55\x38\x47\x27\x53\x0b\xf7\xe8\xc2\x2b\x54\x3a\x80\xae\xe4\x4d\x3a\xb1\xd7\x30\xf0\x0a\x22\x47\x93\xd9\x77\xea\x18\xbe\xa5\xc8\xde\xa0\x45\x27\x0d\x43\x04\x8b\x44\x3b\x07\xaa\x61\xe2\x51\xec\x50\xe9\x68\x79\xaf\x0d\x2f\xf7\xe9\xcf\xc5\x87\xc9\x7b\x6e\x36\x4e\xa1\xcb\xc5\xa4\x5b\x54\x43\x5d\x8b\x31\x59\x1f\x1c\x73\x2e\xc7\x9e\x1c\x07\x85\x83\x7f\x25\x8b\x19\x33\xcd\xb0\x9c\x6a\xed\x92\x53\x53\xec\xb8\x93\x16\xca\x17\xce\xb0\x03\xa0\xb6\x41\x16\x43\x94\x07\x07\x98\xf8\xce\x43\xcb\x59\xe4\x3f\xcc\x0b\x15\x5a\xaf\x13\x4c\x26\xc4\x55\xe3\xda\x4d\x50\x5e\xc4\x63\x1b\x05\x71\x45\x54\x81\x4e\xe7\xaf\x3e\xe9\x69\x12\xa9\x49\xf5\x91\x0d\x4e\xfa\xc0\xf5\xdd\xff\x12\xd9\xa1\x2c\xca\x8d\x08\x79\x23\xab\x4a\xe6\xe2\x8d\xe4\xe6\x2e\x8e\x8d\xae\x61\xb6\xc9\x56\x12\x86\xac\x4b\x1a\xd7\x2d\xb8\x50\x9b\x21\xb7\xdc\xa1\x27\xe8\xf5\x9c\x15\x25\xd7\x36\x3f\x1b\xa4\x82\xc8\xce\x67\xd2\xd5\x8c\x97\x53\x1f\x5c\x5a\xe9\xed\x63\xb1\xcf\xad\x5f\x75\x0b\xc3\xc6\x0d\xf1\xe9\xfb\xd8\x33\x9c\x6f\x03\x74\x50\xd7\xa6\xe5\xb8\xc5\xd5\x97\x24\x5c\x0f\x53\x89\x59\xf4\x3e\x17\x3f\x48\xcf\xb5\x49\x81\xf9\xa7\x60\x95\x75\xa7\x3d\xc7\xe8\x34\x70\xe6\xc3\xb6\x00\x37\x9b\x28\xb2\x5a\xf8\xc7\x7b\x87\x5a\xfe\xfd\x2e\xfa\x3e\xbc\xc0\x9c\x48\xd4\x00\x06\x1b\x34\x6c\x76\xf7\xff\x7d\x4c\x60\x2a\x1d\x53\xea\xd8\x51\x9d\x8b\x53\x26\xdf\xb9\x4d\x13\xce\xa9\xd3\x68\x83\xec\xeb\x6c\xf8\x27\x01\x29\x05\xbc\x19\xd0\xf4\x22\xdc\xbe\xd1\xde\x20\x37\x47\xde\x92\x8b\xfe\xef\xd0\xf6\x06\x50\x28\x19\xf0\x55\xd0\xd5\x2e\x30\x94\x0c\xb1\x82\x57\xb0\xbc\xef\xc3\x83\x15\x35\x98\xaa\x51\xf4\xd2\xcb\x49\x9b\x34\x4c\x29\xe7\x22\xfb\xe0\xcc\x50\x16\xe2\x82\xd5\x46\x20\x50\xda\xd7\x46\xb2\x39\x69\x25\x6d\x8c\xeb\x5e\xe1\xfb\x66\xb1\x03\xcc\xe1\xe4\x0d\x2e\xfb\x73\xd3\x30\x70\xa7\xad\xa2\xbb\x61\x14\xf8\x0c\x54\x5a\x12\xd9\x09\xa5\x56\xff\xd4\x2d\x94\xed\x9e\xf8\xde\x19\xc2\x87\xc9\xfb\xd4\x56\x92\x98\x43\x05\x1e\xb1\x4a\x23\xdc\x14\x41\x5a\xc0\x8f\x01\x9d\xed\x69\xa6\x64\x19\xb3\xd7\x83\xa4\x52\x69\xa0\x73\xf8\x73\xd4\xfc\xf6\x2c\x84\x3a\x7f\xf5\x0a\x6a\x87\xd7\xfa\xe3\xeb\x54\xc7\x4a\x72\x2f\xe2\x7b\x9a\xb6\x96\xaa\x5b\xf4\x72\x26\x99\x0b\x56\xc2\xad\xb6\xdd\x13\xdc\xe1\x74\x04\xe3\xbe\x41\x29\xaa\x8d\x4d\x7d\xa7\xd1\x96\x1f\xf6\xc7\xad\x4f\x7f\x2d\xb2\x0b\xe9\x6e\x30\xe4\x62\xdc\x3d\x9a\x7f\xd1\x91\x4a\x6a\xc3\x06\x3b\xf4\xfe\x9f\x3b\xc2\xbb\x03\xe5\xff\x8a\x23\xf8\x0b\xde\x9c\x68\x5f\xf2\xe9\xf2\x9f\xfa\x31\x1c\xfe\xfa\x19\xf1\x3e\xcb\xe7\x0e\xef\xae\x33\x4b\x76\xea\x50\x96\xac\x99\xd7\x14\x78\x86\x89\xf3\x37\xe4\x77\xc6\xb5\x9d\x76\x89\xc4\x3e\x58\xac\xfb\x7c\xbb\x51\xc7\xd2\x27\x11\xb9\x73\xd7\x0b\x81\x99\x46\xd1\x46\xe3\x5d\x92\x2c\x33\xc3\xe2\xfe\xcc\x69\x1b\xb8\xf3\xf9\x52\x64\xe7\xb2\x61\x5a\x5f\xcf\xb9\x62\x4c\xd1\x28\xb0\x14\xe0\x5a\xdb\x3e\x98\x9e\xd5\xc0\xb5\xe6\x5c\x04\xa7\xed\xcd\x68\x13\xc5\x27\x58\x7d\xc2\xb0\x7c\x98\x63\xc1\x9a\xb8\x35\x60\xa5\xc1\x39\xda\x11\x13\x5c\x6d\x24\xb7\x8c\x13\x39\x73\x52\xf1\xe1\x27\xf8\x91\x07\x1f\x69\x56\x8b\xa4\xfb\x7e\x9a\x91\x41\x48\x5d\x37\x51\x7b\x9c\x23\x14\x68\xb6\x7d\x57\x1c\xb3\x0d\xd2\x2a\x70\xfd\x69\x69\x46\xb8\xed\x1e\x03\x48\xb0\x9b\x73\xc5\x70\x17\xdc\xe9\x30\x13\xdb\x1b\x61\x2e\x45\xc6\x47\xac\xdf\xda\xd9\xda\x4f\xa6\x9b\x9d\xc3\x6c\xfa\xa3\x0c\xc5\x0c\x0a\x99\x88\x6d\x42\x73\xa3\x57\x8b\xd4\xbd\xaa\x24\x4a\x25\xd3\xf4\xbe\xb8\xe4\xf0\xf6\xb4\xa3\xd6\x7a\xf6\xbc\x46\x63\x8a\x19\x72\x9f\x48\x7d\x83\x8c\x84\x34\xe2\xd7\xda\xc7\x64\x91\xf6\x33\x9e\x00\x4b\xb2\x4c\x9d\x8c\x9f\x1b\xcb\xb2\xad\xb7\x2a\xfd\x93\xae\xed\xcd\xea\x1f\xee\xac\xb3\x6c\x67\xa4\x13\x1c\xe9\x82\x69\x51\xba\x81\xfc\xb4\xea\xe7\x02\x0e\xa0\xed\x1e\xb9\x03\xac\x69\xc6\xa5\x11\xe9\x9a\xdc\x2e\xd7\xad\x3e\x75\x0b\x85\x25\xd4\xfd\xdc\x37\xa1\x3b\xbf\x9e\x22\xd2\x60\xcf\xbd\x22\x89\xf5\xd5\xa2\x94\x1b\xe0\xf1\x51\xf2\xba\xd7\x8a\x2f\x4e\x22\x25\xb2\x34\x54\xb0\xd0\x5a\x4f\x2b\xeb\xf1\xb8\x97\x0e\x50\x70\x0b\x10\x83\x3c\x04\xd7\xeb\x88\x64\xec\x98\x4c\xac\x2c\xdc\x38\x8a\x35\x2b\xd1\x32\xd6\xda\x4a\xf6\x27\xd6\xc5\xea\xaf\xc9\xc4\xc1\xc2\xd4\x4c\x06\xe7\x8a\xfe\xb5\x17\xfe\xa5\xf7\xb0\x80\x66\x18\x6c\xce\x6b\xa3\x03\x83\xcc\xf4\x09\x56\xcb\x07\x5e\x98\xc6\xd5\xff\xf6\xd7\xa3\x31\x50\x4b\xa5\x86\x31\xdf\xea\xb0\xfa\xc4\xaa\x84\x4a\x27\x6f\x61\x1a\xed\xf2\xa1\x5c\xef\xe3\xda\x5d\xef\x5b\x3e\xdc\x32\xaa\x9f\xef\x9b\xd0\x1d\x84\xb6\x66\x93\x2e\xda\xba\x0f\xd2\x6e\x52\x82\x9c\x9a\x5d\x7b\x83\x9c\x46\xc3\x1b\x0e\x49\xb5\xb9\xb8\x58\x3e\x18\xe2\x59\x70\x10\x99\x1b\xb5\x7a\x4c\x14\x58\x82\x9d\xc9\xa0\x97\xf7\x29\x35\x47\x68\xb0\xcf\x0d\xc7\xad\xff\x3c\x31\x24\x65\x2f\x71\x5f\xc5\x80\x95\x4a\x64\xe7\x05\xd5\x98\x42\xe3\xe5\x6c\x7b\xea\xda\xce\xe1\xdc\x8d\x99\xe2\x2d\xa4\x5c\xbf\xd4\xa4\xf3\xdd\xbc\x5f\x70\x4b\x3f\x91\x33\x72\x71\x3b\xf1\x0f\x59\x78\x6b\x64\xc3\x3e\x24\xe6\x4d\x89\x90\x69\x7c\x88\x95\xcd\xc5\x79\x9f\xbf\x21\x92\xcf\x51\xd1\x87\x93\x51\xc1\xf9\xc8\xc5\xe1\xf0\xf6\x8f\x5a\x29\x83\xfb\x5f\x34\x52\xc6\x76\x52\x91\x6e\x6a\x13\xe2\xea\x76\x88\xda\x76\x30\xde\x89\x1c\x5f\xfc\xb5\x79\x62\x9b\xcf\x0b\x0e\xd0\x57\xf7\xf5\xf1\x6a\x39\xad\x21\x50\x95\xbe\xfe\xb0\xd9\xe2\x72\x13\xbe\x3d\x0d\xbc\x17\xbc\x3e\x5c\xdb\x40\x49\x91\x4d\x86\xba\x5c\x7f\x38\xdc\xaf\x82\xe7\xa5\xb9\x29\x82\x61\xfb\x98\x8c\x1f\x42\x9b\x64\xd4\x0e\x41\x7c\xad\xaa\x99\x49\x7f\xd2\x2a\xcc\x72\xb1\xfa\x4b\xf7\xb8\xfa\x94\x20\xd7\x57\xcb\x57\x7c\x5e\x07\x98\x47\xbb\xed\x97\x85\x71\x0c\x43\xb0\x87\x0f\xd8\x3b\x91\x1e\xb0\xd6\x7b\xb1\x05\x9b\x5f\x63\x60\x9c\x34\xc1\x7e\x5a\x7f\x44\x77\x93\xba\x46\xd2\x92\xec\x53\x12\xa3\x9b\xec\xae\xeb\x0c\xab\xda\xc8\xb0\x0b\xfb\x39\xc2\x6a\x21\xa7\x26\x8d\x92\x17\xc3\x73\x66\xbf\xbf\xac\x17\x05\x6b\x7d\xc6\x9c\x55\xcf\x18\xab\xa6\xb9\x54\x89\xd0\xc6\xd1\x07\xaa\x46\xa3\xd1\xc6\xf9\x9d\xe5\xcd\x5b\xeb\x27\xac\x71\x53\x63\x3b\xa1\xed\x89\x38\x4f\xcb\xed\x5a\x41\x3e\xbb\x6a\xf8\x74\x28\xce\x67\x5c\xbc\xe9\x3b\x29\xeb\xea\xb2\x5b\x70\x70\xa6\x86\x92\x9f\xe9\xa9\xb6\x8d\xf6\x9a\x81\xb8\x99\xe6\x77\xf7\xfa\xd2\xb5\xa1\xfb\x9c\x46\x7a\x7e\xe7\xa7\x34\xef\xc2\x1f\x7f\xf9\xa7\x3e\x74\x8d\xec\xff\xc9\xfa\xa0\xed\x7c\xfe\x3e\xd6\x69\xca\xa2\x38\xe5\xa1\x96\x05\x3e\xeb\x76\x86\x53\x9b\x86\xfb\x62\x06\xc9\xf4\x03\x87\x72\x04\x67\xac\xcd\xe0\xe0\xfd\xc5\x2f\x8e\xff\x13\xae\xc9\x41\x85\x36\xee\x2d\x7f\xf7\xcb\xb4\x1e\x88\xcc\x54\xba\xdd\x47\xfd\x83\x19\x1a\xae\xf3\xc9\xc5\xf1\x66\x64\x1f\xc1\x79\xd0\xa5\x5d\x3e\x04\xec\xcf\x60\xe0\xed\x7e\xe5\xe2\x4b\xb2\xcd\xf1\xcf\x1e\xda\x6e\xc1\xd3\xd4\x6d\x92\xd1\xdc\xd5\x43\x9b\x0d\xf7\xf1\x4e\xdb\x2d\x6a\x6a\x96\x0f\x2a\x8e\x98\xac\x52\x7d\x9c\x0c\xaf\xa0\xc8\x2e\x93\x80\xba\x4a\xc7\x71\x38\x52\xb1\xe7\x5c\xf3\xd1\x70\x21\xf4\xdf\xc4\x37\x9f\xc4\xc5\x9f\xbe\xfd\xaf\xbf\x07\x00\x00\xff\xff\x77\xe4\xc2\xf8\xbd\x19\x00\x00")

func contentJsTinymceCs_czJsBytes() ([]byte, error) {
	return bindataRead(
		_contentJsTinymceCs_czJs,
		"content/js/tinyMce-cs_CZ.js",
	)
}

func contentJsTinymceCs_czJs() (*asset, error) {
	bytes, err := contentJsTinymceCs_czJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "content/js/tinyMce-cs_CZ.js", size: 6589, mode: os.FileMode(438), modTime: time.Unix(1474217588, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _contentJsTinymceinitJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x53\xd1\x8e\xd3\x3a\x10\x7d\x5f\x69\xff\x61\x14\xe9\xca\xad\xd4\x9b\xb4\xd9\xed\xb6\x9b\xde\xdc\x07\x16\x21\x78\x40\x20\x21\xf1\x00\x42\x95\x63\x4f\x12\x6f\x1d\x3b\xb2\x27\xd0\x2e\xdd\x8f\xe1\x5b\xf8\x31\xe4\xa4\x81\x2e\x0f\x48\xcc\xcb\x9c\xc4\x33\x67\xce\xcc\xd8\x54\x2b\x1f\x93\x32\x87\x46\x60\xac\x8c\xa2\xc9\xd7\xcb\x0b\x00\x00\x8f\x1a\x05\x59\x97\x01\x23\xdc\x13\x77\xc8\xd9\x6c\x38\xd2\xdc\x54\x1d\xaf\x70\xdb\x39\x9d\x01\x4b\x84\x35\x84\x86\x92\x7b\x9f\x04\xa6\xd7\x02\xff\x15\x7e\x7b\xf7\x21\xbe\xf7\x63\x4a\x83\xa6\x2b\xb8\xcb\xa0\xe4\xda\xe3\xe9\x67\x8d\xaa\xaa\x29\x03\xb6\x9c\xcf\xdb\xfd\x18\xea\xd0\xab\x07\x7c\x1a\xd9\xea\xae\x52\xc6\x67\xf0\x31\x22\x5e\x68\x84\x68\x06\x91\xb0\x12\x83\xe7\x1d\x59\xad\xcc\x2e\xe0\xd1\x7b\xfe\x19\xa3\x4f\xa7\xec\x2f\x4a\x52\x9d\x01\x5b\xcc\xe7\xff\x8c\x55\x0a\x6d\xc5\x6e\x5b\x5a\xd7\x70\xf2\x19\xb0\xb7\xdc\xf1\xca\xf1\xb6\xce\xdb\xcd\x4b\xe4\x12\x1d\x2c\xf2\x7a\x31\xe2\x34\xaf\xd3\x11\x5f\xe5\xf5\xd5\x48\x43\xd6\xea\xbe\x2f\x16\x2a\xc2\x11\x3a\x23\x2d\x38\x94\x16\x8e\x70\x62\xef\x07\x09\x85\xd5\x12\x14\x71\xad\x44\x08\x42\xa7\x95\x41\xf0\xe4\xd4\x0e\xa9\x76\xb6\xab\x6a\x38\x42\xd0\x0f\xa5\x56\x62\xe7\x5e\x35\xbc\x0a\x8c\x5c\xab\xca\x68\x2c\x69\x40\x02\x0d\xa1\x1b\xb0\x0b\xf3\x83\x23\x14\x9d\xd6\xca\x13\x98\xae\xe9\xfd\x30\xa3\x23\x84\x09\x8d\x4a\x3d\x52\xd7\x66\x50\x76\x46\x90\xb2\x06\x26\x28\x15\x59\x37\x85\xd3\xbe\x83\x0d\xbf\x62\x2e\xe5\xb3\x8e\xc8\x9a\x09\x3b\x93\xc2\x66\xe7\xa1\x7d\xf3\xb8\x0f\xdb\x7b\x53\xb8\xef\xdf\x1e\x70\x37\x56\x1a\x4d\x09\x6b\x9e\xae\x71\x34\x6b\x44\xe0\x3d\x57\x33\xfd\x9d\xfc\x4c\x8f\x32\x1e\x1d\xdd\x0d\xb7\x6c\xc2\xfe\x53\x4d\x05\x9e\x0e\x1a\xf3\x48\x2a\xdf\x6a\x7e\xc8\x86\x7d\x6e\xa0\xe5\x52\x2a\x53\x65\xb0\x6c\xf7\x1b\x68\xb8\xab\x94\xc9\x60\x0e\xe1\x8e\x44\xe0\x9d\xc8\xa3\x9a\xa8\xcd\x92\xa4\xe4\xae\xb9\x8d\x3d\x71\x52\x62\xe8\x32\x16\xb6\x49\xd6\xab\xdb\x34\x49\xd7\xeb\x9b\xd5\xcd\xcd\x2a\x5d\x2c\xb7\xd7\xcb\xf9\x6a\x7d\x9d\xa6\xb7\x57\xdb\x26\xbe\x6f\xab\xe8\x7f\x36\xdd\x3c\x95\xfa\xf8\xeb\xf3\xf1\xfc\xec\x24\x3f\xcc\x31\xbc\x2c\x36\xfb\x53\xbf\xfd\x43\xac\x90\x9e\x5b\x31\x99\xc6\x85\x95\x87\xb8\xef\x31\x2e\xad\xa1\x77\xea\x01\x21\x07\xb6\xb8\x6e\xf7\x6c\xf3\x17\x89\x2f\x78\xa3\xf4\x21\xa4\xbe\x47\x27\xb9\xe1\xe7\xd9\x3f\xc5\x3e\x5e\x5e\xf4\xf8\x47\x00\x00\x00\xff\xff\x08\xa1\x1e\xa2\x0d\x04\x00\x00")

func contentJsTinymceinitJsBytes() ([]byte, error) {
	return bindataRead(
		_contentJsTinymceinitJs,
		"content/js/tinyMceInit.js",
	)
}

func contentJsTinymceinitJs() (*asset, error) {
	bytes, err := contentJsTinymceinitJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "content/js/tinyMceInit.js", size: 1037, mode: os.FileMode(438), modTime: time.Unix(1475009148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"content/css/flickr.css": contentCssFlickrCss,
	"content/js/flickr.js": contentJsFlickrJs,
	"content/js/tinyMce-cs_CZ.js": contentJsTinymceCs_czJs,
	"content/js/tinyMceInit.js": contentJsTinymceinitJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"content": &bintree{nil, map[string]*bintree{
		"css": &bintree{nil, map[string]*bintree{
			"flickr.css": &bintree{contentCssFlickrCss, map[string]*bintree{}},
		}},
		"js": &bintree{nil, map[string]*bintree{
			"flickr.js": &bintree{contentJsFlickrJs, map[string]*bintree{}},
			"tinyMce-cs_CZ.js": &bintree{contentJsTinymceCs_czJs, map[string]*bintree{}},
			"tinyMceInit.js": &bintree{contentJsTinymceinitJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

